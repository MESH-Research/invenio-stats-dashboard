[build-system]
requires = ["setuptools>=61.0", "wheel", "babel>2.8"]
build-backend = "setuptools.build_meta"

[project]
name = "invenio-stats-dashboard"
version = "0.1.0-alpha1"
description = "Invenio Stats Dashboard"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "MESH Research", email = "info@meshresearch.net"}
]
keywords = ["invenio", "stats", "dashboard"]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
]
dependencies = [
    "psutil>=6.0.0",
    "glom>=23.0.0",
    "arrow>=1.3.0",
    "flask-sqlalchemy",
    "pydantic>=2.11.7",
    "halo>=0.0.31",
    "openpyxl>=3.1.0",
    "brotli>=1.0.0",
]

[project.optional-dependencies]
docs = [
    "Sphinx>=7.0.0",
    "furo>=2023.0.0",
    "myst-parser>=2.0.0",
    "sphinx-copybutton>=0.5.0",
    "sphinx-design>=0.3.0",
    "linkify-it-py>=0.2.0",
    "uc-micro-py>=1.0.0",
]
tests = [
    "invenio-app-rdm[opensearch2]~=13.0.0",
    "invenio-cli",
    "pytest-invenio",
    "pytest-ruff>=0.1.0",
    "pytest-mypy>=0.10.0",
    "pytest-black>=0.6.0",
    "pytest-cov>=6.2.1",
    "pytest-isort>=4.0.0",
    "pytest-mock",
    "requests-mock",
    "arrow",
    "docker-services-cli",
]
dev = [
    "black>=25.1.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
]

[project.urls]
Homepage = "https://github.com/MESH-Research/invenio-stats-dashboard"

[tool.uv.sources]
# invenio-rdm-records = {path = "../invenio-rdm-records", editable = true}
# invenio-requests = {path = "../invenio-requests", editable = true}

[tool.setuptools]
packages = ["invenio_stats_dashboard"]
zip-safe = false

[tool.setuptools.package-data]
"*" = ["*"]

[project.entry-points."flask.commands"]
community-stats = "invenio_stats_dashboard.cli:cli"

[project.scripts]
community-stats = "invenio_stats_dashboard.cli:cli"

[project.entry-points."invenio_base.apps"]
invenio_stats_dashboard = "invenio_stats_dashboard.ext:InvenioStatsDashboard"

[project.entry-points."invenio_base.api_apps"]
invenio_stats_dashboard = "invenio_stats_dashboard.ext:InvenioStatsDashboard"

[project.entry-points."invenio_base.blueprints"]
invenio_stats_dashboard = "invenio_stats_dashboard.views.views:create_blueprint"

[project.entry-points."invenio_base.api_blueprints"]
invenio_stats_dashboard = "invenio_stats_dashboard.views.views:create_api_blueprint"

[project.entry-points."invenio_assets.webpack"]
invenio_stats_dashboard_theme = "invenio_stats_dashboard.webpack:theme"

[project.entry-points."invenio_celery.tasks"]
invenio_stats_dashboard = "invenio_stats_dashboard.tasks.aggregation_tasks:aggregate_community_record_stats"
invenio_stats_dashboard_reindexing = "invenio_stats_dashboard.tasks.aggregation_tasks:reindex_events_with_metadata"
invenio_stats_dashboard_progress = "invenio_stats_dashboard.tasks:get_reindexing_progress"

[project.entry-points."invenio_base.finalize_app"]
invenio_stats_dashboard = "invenio_stats_dashboard.ext:finalize_app"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "D104", "E402"]

[tool.ruff.lint]
# temporarily removed C for complexity checks
select = ["E", "F", "I", "B", "UP", "D", "DOC"]
# Now Ruff handles formatting, so enable formatting rules
ignore = [
    # Keep some warnings disabled
    "W1",   # Indentation warnings
    "W2",   # Whitespace warnings
    "W3",   # Blank line warnings
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = false
ignore_missing_imports = true
follow_imports = "skip"
allow_untyped_globals = true
exclude = [
    '^tests_stats_dashboard/',
    '^invenio_stats_dashboard/search_indices/search_templates/.*/os-v2/',
    '^invenio_stats_dashboard/patches/',
]

[[tool.mypy.overrides]]
module = "invenio_stats_dashboard.search_indices.search_templates.*"
ignore_errors = true
ignore_missing_imports = true
follow_imports = "skip"

[tool.isort]
profile = "black"
line_length = 88
verbose = true
multi_line_output = 3  # Vertical hanging indent
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip = [
    "__pycache__",  # Skip cache directories
]

[tool.pytest.ini_options]
addopts = """
--ruff --doctest-modules
--log-cli-level=DEBUG
--ignore=docs
--ignore=node_modules
--ignore=invenio_stats_dashboard/patches
--cov=invenio_stats_dashboard --cov-report=term-missing
"""
norecursedirs = []
log_cli_level = "DEBUG"
isort_show_files = true
plugins = [
    "tests.fixtures.files",
    "tests.fixtures.mail",
    "tests.fixtures.communities",
    "tests.fixtures.custom_fields",
    "tests.fixtures.records",
    "tests.fixtures.roles",
    "tests.fixtures.stats",
    "tests.fixtures.users",
    "tests.fixtures.vocabularies.affiliations",
    "tests.fixtures.vocabularies.community_types",
    "tests.fixtures.vocabularies.date_types",
    "tests.fixtures.vocabularies.descriptions",
    "tests.fixtures.vocabularies.funding_and_awards",
    "tests.fixtures.vocabularies.languages",
    "tests.fixtures.vocabularies.licenses",
    "tests.fixtures.vocabularies.resource_types",
    "tests.fixtures.vocabularies.roles",
    "tests.fixtures.vocabularies.subjects",
    "tests.fixtures.vocabularies.title_types",
]

[tool.coverage.run]
omit = [
    "tests_stats_dashboard/*",
]
